It is very difficult to determine key quality without insight of the key creation process, and any test would suffer from false negatives, and could also suffer from false positives. The test would have to try to test that there exists no recognizable patterns or regularities. I assume that we only get to test one key, but if possible I would use this test on a set of keys to eliminate anomalies, and from that set try to statistically determine if a large amount of the keys were determined to probably be random.

My test would use a combination of different variants of frequent tests (serial tests), where the number is random if every test determines that the number is random. The most simple variant is just controlling that the frequency of 0s and 1s is roughly the same (50%). Maybe if the distribution is worse than 70% and 30% the test would fail. I would do the same with all possible sequences of two digits at a time (00 01 10 11). Maybe I would do the same with more digits, like 8 or 4 digits at a time.

Another test is to choose larger sequences of digits like 32 or larger and ensure that no possible block is the same. For example, the number 00011100 00000000 00010111 01011000 00011100 00000000 00010111 01011000 would fail the test as the first half of the number is identical to the second half. A combination of these two tests would be used.

There are many, many more tests, like plotting numbers over a 3-dimensional space and trying to find patterns, the extensive diehard tests, poker test and many more. This is just a simple test that would be quite easy to implement.